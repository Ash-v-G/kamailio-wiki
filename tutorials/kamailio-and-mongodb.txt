====== Kamailio and MongoDB ======

====== Kamailio Database ======

The **use** command in mongodb client **mongo** creates the database if it doesn't exit:

<code>
# mongo
> use kamailio
</code>

To display the databases, you can use:

<code>
> show dbs
</code>

Note that a database is not shown by the above command if it is empty -- you need to add some records to it.

===== Version Table =====

Kamailio uses version table to check if the structure of a database table has the structure version the C code expects.

A table is MongoDB is named collection. To create the collection **version**, do:

<code>
> db.createCollection("version")
</code>

List the existing collections in the current database:

<code>
> show collections
system.indexes
version
> 
</code>

==== Version Table Records ====

Add the records for the other Kamailio tables you are going to use. Some examples:

<code>

> db.getCollection("version").insert({table_name: "subscriber", table_version: NumberInt(6) })

> db.getCollection("version").insert({table_name: "location", table_version: NumberInt(8) })

> db.getCollection("version").insert({table_name: "presentity", table_version: NumberInt(4) })

> db.getCollection("version").insert({table_name: "watchers", table_version: NumberInt(3) })

db.getCollection("version").insert({table_name: "active_watchers", table_version: NumberInt(11) })

</code>

===== Other Tables =====

MongoDB doesn't have a schema definition for documents stored in a collection.

===== DB URL =====

The corresponding database URL in kamailio.cfg:

  * if MongoDB is on local host and there is no username and password to connect to it:

<code>
#!define DBURL "mongodb://localhost/kamailio"
</code>

  * if MongoDB is on local host and there is an username and password to connect to it:

<code>
#!define DBURL "mongodb://username:password@localhost/kamailio"
</code>