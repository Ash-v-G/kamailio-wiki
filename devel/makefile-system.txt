====== Kamailio's Makefile System ======

===== Generate Main Binary =====

<code>
make
</code>

===== Compile Everything =====

<code>
make all
</code>

===== Install Everything =====

<code>
make install
</code>

===== Clean Source Tree =====

  * clean object files

<code>
make clean
</code>

  * clean all generated files

<code>
make proper
</code>

===== Generate Modules =====

<code>
make modules
</code>

===== Generate Config for Makefile =====

<code>
make cfg
</code>

  * add extra defines in makefile config

<code>
make EXTRA_DEFS="-DSTATISTICS" cfg
</code>

  * cfg for Makefile is config.mak
  * you can edit it and tune as you wish before compilation

===== Enable Module =====

If the module is not compiled by default:

  * edit **modules.lst**
  * remove the name of the module from **exclude_modules** variable

or type: <code>make modules-cfg include_modules=<name_of_the_module></code> .

The same can be accomplished with <code>make cfg include_modules=<name_of_the_module> </code>
, but this will remake the whole config. 

===== Combined Parameters =====

Various parameters can be given to make command, an example:

<code c>
make prefix=/opt/kamailio \
     SCTP=1 \
     CC_EXTRA_OPTS=-I/usr/gnu/include \
     group_include="standard postgres presence" \
     include_modules="snmpstats perl tls" \
     all

</code>


or you can save them in the config (they will be used by future make invocations) by givin the same parameters to make cfg:
<code c>
make cfg prefix=/opt/kamailio \
     SCTP=1 \
     CC_EXTRA_OPTS=-I/usr/gnu/include \
     group_include="standard postgres presence" \
     include_modules="snmpstats lcr tls"
</code>

===== Generate README For Modules =====

  * all READMEs for modules located in directory **modules**
<code>
make modules-readme
</code>
  * README for one module. Example for **modules/dispatcher**:
<code>
make modules-readme modules=modules/dispatcher
</code>

or

<code>
make -C modules/dispatcher/doc readme
</code>

===== Generate Different Formats For Modules Documentation =====

Available formats:
* txt - text plain
* xhtml - single xhtml file
* html - html files (chunks) split by sections
* pdf - PDF file

Command to generate a specific format for a module:
<code>
make modules-doc doc_format=format modules=path/to/module
</code>

Example: generate single xhtml file for **auth** module:
<code>
make modules-doc doc_format=xhtml modules=modules/auth
</code>

===== Regenerated Database Scripts =====

<code>
make dbschema
<code>

===== Various Helpful Commands =====

==== Print Uninstall Details ====

<code>
make uninstall
</code>

==== Install Debian init.d Scripts ====

<code>
make install-initd-debian
</code>

==== Install CentOS init.d Scripts ====

<code>
make install-initd-centos
</code>

==== Print C Define Flags ====

<code>
make printcdefs
</code>

==== Print Content of Variable ====

<code>
make printvar v=varname
</code>

Printing $(C_DEFS) content.

<code>
make printvar v=C_DEFS
</code>

