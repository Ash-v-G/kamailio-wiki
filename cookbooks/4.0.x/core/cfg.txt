<fc #FF0000>**This is a work in progress**</fc>

====== The Configuration File ======

===== Configuration Elements =====

==== Configuration Directives ====

There are five (5) types of configuration directives used with Kamailio.

  - [[cfg#c-style_control_directives|C-Style Control Directives]]
  - [[cfg#apache_namevalue_pairs|Apache Name/Value Pairs]]
  - [[cfg#normal_namevalue_pairs|Normal Name/Value Pairs]]
  - [[cfg#modify_parameter_procedure|Modify Parameter Procedure]]
  - [[cfg#route_functions|Route Functions]]

==== Comments ====

Configuration file comments are PHP style, without the double-slash line comment.  Only hash (#) will work for line comments.\\ 
<fc #FF0000>//This gets confusing since the hash-bang (#!) is used at the beginning of the C-Style Control Directives.//</fc>

<code>
/* block comment
   block comment */
// this is NOT a line comment
# this is a line comment
#!c_style_directive
</code>


==== Instruction Separator ====

The semicolon works with all forms of configuration directives as an instruction separator.  Allowing for comments or additional configuration directives on the same line.

<code>
configuration_directive_a; configuration_directive_b
configuration_directive; # comment about the configuration directive
</code>

===== Configuration Directives =====
==== C-Style Control Directives ====

 Available directives:

  * #!define NAME - define a keyword
  * #!define NAME VALUE - define a keyword with value
  * #!ifdef NAME - check if a keyword is defined
  * #!ifndef - check if a keyword is not defined
  * #!else - swtich to false branch of ifdef/ifndef region
  * #!endif - end ifdef/ifndef region
  * #!trydef - add a define if not already defined
  * #!redefine - force redefinition even if already defined
  * #!subst
  * #!substdef

<code>
#!define MODULE_NAME

#!ifdef MODULE_NAME
 .. set directives ..
#!else
 .. set alternate directives .. 
#!endif
</code>

==== Apache Name/Value Pairs ====

  name "value"

<fc #FF0000>//The value MUST be enclosed in quotes.//</fc>

  loadmodule "module_name.so"
  loadmodule "another_module.so"
  include_file "file_to_include.cfg"
  import_file "file_to_import.cfg"

  
==== Normal Name/Value Pairs ====

  name=value
 (delimited by an equals sign) 

[[../core#core_parameters|core_parameters]]

<code>
memdbg=5
memlog=5
log_facility=LOG_LOCAL0
fork=yes
children=4
#disable_tcp=yes
auto_aliases=no
alias="sip.mydomain.com"
</code>

==== Modify Parameter Procedure ====

<code>
modparam("first_module", "module_parameter_text", "new_value");  # Set Text Value
modparam("second_module", "module_parameter_number", 10000);      # Set Numeric Value
modparam("second_module", "module_parameter_on", 1);              # Enable Parameter
modparam("third_module", "module_parameter_on", 0);             # Disable Parameter
</code>

==== Route Functions ====